

(1)Модель_искусственного_нейрона_и_градиентный_спуск.ipynb
Реализована работа базовой модели искусственного нейрона Мак-Каллока – Питтса.
Функция активация - сигмоидальная. Корректировка весов происходит с помощью стохастического градиентного спуска.

(2-1) Реализация_алгоритма_ADAM_для_обучения_нейронной_сети_процедурный_вариантipynb.ipynb
Реализована работа алгоритма ADAM на примере трёхслойной нейронной сети.
Это процедурный не гибкий вариант, в первую очередь для иллюстрации и понимания алгоритма.
В следующем файле проведен рефакторинг этого начального варианта.

(2-2) Реализация_алгоритма_ADAM_для_обучения_нейронной_сети_объектный_вариант.ipynb
Реализована работа алгоритма ADAM на примере трёхслойной нейронной сети.
Функция активация - сигмоидальная. Корректировка весов происходит с помощью стохастического градиентного спуска (модификация ADAM).
Благодаря объектной структуре скрипт обладает гибкостью и можно менять количество нейронов в слоях.


(3) Решение_задачи_регрессии_с_помощью_нейронных_сетей.ipynb
Иллюстрация использования полносвязной сети из 4 слоёв для предсказания стоимости жилья. Используется
стандартный набор данных, предоставляющийся Colaboratory.

(4) Полносвязная_нейронная_сеть_для_распознавания_картинок_в_Keras.ipynb
Иллюстрация работы полносвязной сети без обратной связи для распознавания изображений в стандартном наборе CIFAR10.

(5) Полносвязная_нейронная_сеть_для_распознавания_моделей_одежды_в_Keras.ipynb
Иллюстрация работы сети для распознавания изображений в стандартном наборе CIFAR10.
Последовательно будет собрана модель без обратной связи, найден момент переобучения, собрана модель с обратной связью.

(6) Сверточная_сеть_для_распознавания_рукописных_цифр.ipynb
Реализована стандартная архитектура LeNet 5 для построения сети. Сеть распознает рукописные цифры из стандартного набора
mnist. 

(7) Применение_сети_DenseNet_для_распознавания_картинок_из_набора_CIFAR-10.py
Будет продемонстрирована работа предобученной сети DenseNet для распознавания картинок из набора CIFAR10.
Сверточная часть сети DenseNet будет первым слоем нашей модели, далее последуют наши собственные
полносвязные слои для классификации изображений по 10 классам.
Обучение такой модели занимает очень много времени и на платформе Colaboratory в рамках бесплатного аккаунта
его практически не запустить. Поэтому файл представлен как .py скрипт. Кроме того, прилагается файл с уже обученной
моделью (DenseNet+наши полносвязные слои), который скрипт будет использовать для экономии времени.




